#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const program = require('commander')
const package = require('../package.json')
const sync = require('../src/sync.js')

const examplesRoot = path.join(__dirname, '../examples')

program.version(package.version)

program
    .command('init [case]')
    .description('Init project')
    .option('-d, --dest [dir]', 'Set destination directory')
    .action(function (example, options) {
        console.log('example:', example, '; options.dest:', options.dest)
        let srcPath = '../base', destPath = '.'
        if (example) srcPath = '../examples/' + example
        if (options.dest) destPath = options.dest

        srcPath = path.join(__dirname, srcPath)
        destPath = path.resolve(destPath)
        const asserts = require(path.join(srcPath, '.asserts.json')).asserts

        sync(asserts, srcPath, destPath)
    })

program
    .command('list')
    .alias('ls')
    .description('List all cases')
    .action(function () {
        const dirs = fs.readdirSync(examplesRoot)

        console.log()
        console.log('    All cases:')
        console.log()
        dirs.forEach(dir => console.log('        - ' + dir))
        console.log()
        console.log('    You can base on case init project:')
        console.log()
        console.log('        mspa init ' + dirs[0])
        console.log()
    })

program
  .command('*')
  .action(function(env){
    program.outputHelp()
  })

program.parse(process.argv)

if (!process.argv.slice(2).length) {
    program.outputHelp()
}
